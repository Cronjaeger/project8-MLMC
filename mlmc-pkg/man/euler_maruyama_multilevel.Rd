% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/euler_maruyama.R
\name{euler_maruyama_multilevel}
\alias{euler_maruyama_multilevel}
\title{An auxiliary function for computing P_L - P_(L-1)}
\usage{
euler_maruyama_multilevel(L, M, h0, Tmax, N_L = 10^4, a, b, S0,
  payoffFunction = function(S) S)
}
\arguments{
\item{L}{The level of the finest grid to be considered.
Should be a positive integer}

\item{M}{The factor of refinement between two levels.
Should be a positive integer}

\item{h0}{The step size used at level 0. At level L, the step size
is given by h0*M^-L}

\item{Tmax}{the time-horizon of simulations. The underlying random
variable is simulated on the time-interval [0,Tmax]}

\item{N_L}{the number of paths to be sampled.}

\item{a}{the coefficient of drift in the diffusion}

\item{b}{the coefficient of dispersion in the diffusion}

\item{S0}{the initial condition of the diffusion}

\item{payoffFunction}{the payoffFunction to be used}
}
\value{
A vector of length \code{N_L}. Each entry containing 1
estimate of the difference in discretisation-error between two
consecutive grids.
}
\description{
simulates N_L independent paths of the SDE

dS_t = a(t,S_t) dt + b(t,S_t) dW_t

on two differnt grids -- one grid being finer than the
other by a factor of M. Each path on the coarse grid is generated
by summing noise from the finer grid.
The estimates of payoffFunction(S_Tmax) on the two different grids
is then compared and returned for each pair of paths
}

